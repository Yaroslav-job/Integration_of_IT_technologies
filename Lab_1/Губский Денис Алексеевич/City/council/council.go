package council

import (
	"fmt"       // –∏–º–ø–æ—Ä—Ç –ø–∞–∫–µ—Ç–∞ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞/–≤—ã–≤–æ–¥–∞
	"math/rand" // –∏–º–ø–æ—Ä—Ç –ø–∞–∫–µ—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏
	"time"      // –∏–º–ø–æ—Ä—Ç –ø–∞–∫–µ—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º

	"example.com/City/city" // –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è city
)

func init() {
	rand.Seed(time.Now().UnixNano()) // –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö —á–∏—Å–µ–ª
}

func TriggerCouncil(c *city.City) {
	fmt.Println("========================================")
	fmt.Println("üó£Ô∏è –°–æ–≤–µ—Ç –ì–æ—Ä–æ–∂–∞–Ω —Å–æ–±—Ä–∞–ª—Å—è –¥–ª—è –æ–±—Å—É–∂–¥–µ–Ω–∏—è –≤–∞–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤!")
	fmt.Println("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–Ω–æ –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π:")

	options := []string{
		`"üé™ –£—Å—Ç—Ä–æ–∏—Ç—å —è—Ä–º–∞—Ä–∫—É!" ‚Üí +20 –∑–æ–ª–æ—Ç–∞, -1 —Å—á–∞—Å—Ç—å–µ`,
		`"üí∞ –ü–æ–≤—ã—Å–∏—Ç—å –Ω–∞–ª–æ–≥–∏!" ‚Üí +30 –∑–æ–ª–æ—Ç–∞, -2 —Å—á–∞—Å—Ç—å–µ`,
		`"üîß –û—Å–≤–æ–±–æ–¥–∏—Ç—å —Ä–µ–º–µ—Å–ª–µ–Ω–Ω–∏–∫–æ–≤ –æ—Ç –Ω–∞–ª–æ–≥–æ–≤!" ‚Üí +3 –¥–æ—Ö–æ–¥ –∑–∞ —Ö–æ–¥, –Ω–æ -10 –∑–æ–ª–æ—Ç–∞ —Å—Ä–∞–∑—É`,
		`"üçû –ü—Ä–æ–¥–∞–≤–∞—Ç—å –ª–∏—à–Ω—é—é –ø—Ä–æ–≤–∏–∑–∏—é!" ‚Üí +15 –∑–æ–ª–æ—Ç–∞, -5 –∂–∏—Ç–µ–ª–µ–π`,
		`"üè¨ –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –Ω–æ–≤—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ä—è–¥—ã!" ‚Üí +5 –¥–æ—Ö–æ–¥–∞, -20 –∑–æ–ª–æ—Ç–∞`,
		`"üåæ –ü—Ä–∞–∑–¥–Ω–∏–∫ —É—Ä–æ–∂–∞—è!" ‚Üí +10 –∂–∏—Ç–µ–ª–µ–π, -10 –∑–æ–ª–æ—Ç–∞`,
		`"üçª –°—É–±—Å–∏–¥–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞–∫—Ç–∏—Ä—ã!" ‚Üí +3 —Å—á–∞—Å—Ç—å—è, -5 –¥–æ—Ö–æ–¥–∞`,
		`"üç≤ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —Ä–∞–∑–¥–∞—á–∞ –µ–¥—ã!" ‚Üí +5 –∂–∏—Ç–µ–ª–µ–π, +1 —Å—á–∞—Å—Ç—å–µ, -15 –∑–æ–ª–æ—Ç–∞`,
		`"üèñÔ∏è –£—Å—Ç—Ä–æ–∏—Ç—å –¥–µ–Ω—å –æ—Ç–¥—ã—Ö–∞!" ‚Üí +2 —Å—á–∞—Å—Ç—å—è, –Ω–æ –¥–æ—Ö–æ–¥ –∑–∞ —Ö–æ–¥ –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–Ω–∏–∂–µ–Ω –Ω–∞ 20% (3 —Ö–æ–¥–∞)`,
		`"üïí –°–æ–∫—Ä–∞—Ç–∏—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å!" ‚Üí +2 —Å—á–∞—Å—Ç—å—è, –Ω–æ -2 –¥–æ—Ö–æ–¥–∞`,
		`"‚öîÔ∏è –í–æ–µ–Ω–Ω—ã–π –ø—Ä–∏–∑—ã–≤!" ‚Üí +3 –≤–æ–∏–Ω–∞, -5 –∂–∏—Ç–µ–ª–µ–π`,
		`"üõ°Ô∏è –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —É–∫—Ä–µ–ø–ª–µ–Ω–∏–π!" ‚Üí -10% –∫ —à–∞–Ω—Å—É –Ω–∞–ø–∞–¥–µ–Ω–∏—è –≤–∞—Ä–≤–∞—Ä–æ–≤, -30 –∑–æ–ª–æ—Ç–∞`,
		`"üèãÔ∏è –ü—Ä–æ–≤–µ—Å—Ç–∏ –≤–æ–µ–Ω–Ω—ã–µ —É—á–µ–Ω–∏—è!" ‚Üí +2 –∫ –∞—Ä–º–∏–∏, –Ω–æ -10 –∑–æ–ª–æ—Ç–∞`,
		`"üî™ –°–æ–∑–¥–∞—Ç—å –æ–ø–æ–ª—á–µ–Ω–∏–µ!" ‚Üí +2 –∫ –∞—Ä–º–∏–∏, –Ω–æ -2 —Å—á–∞—Å—Ç—å–µ`,
		`"üó°Ô∏è –ö—É–ø–∏—Ç—å –æ—Ä—É–∂–∏–µ —É —Ç–æ—Ä–≥–æ–≤—Ü–µ–≤!" ‚Üí –ê—Ä–º–∏—è —Å–∏–ª—å–Ω–µ–µ (–Ω–∞ 10%), –Ω–æ -25 –∑–æ–ª–æ—Ç–∞`,
		`"‚õ™ –ü–æ—Å—Ç—Ä–æ–∏—Ç—å —á–∞—Å–æ–≤–Ω—é!" ‚Üí +1 —Å—á–∞—Å—Ç—å–µ, -15 –∑–æ–ª–æ—Ç–∞`,
		`"üö´ –ó–∞–ø—Ä–µ—Ç–∏—Ç—å —è–∑—ã—á–µ—Å–∫–∏–µ —Ä–∏—Ç—É–∞–ª—ã!" ‚Üí +5 –∑–æ–ª–æ—Ç–∞, -3 —Å—á–∞—Å—Ç—å–µ`,
		`"üôè –£—Å—Ç—Ä–æ–∏—Ç—å –º–æ–ª–µ–±–µ–Ω –∑–∞ —É—Ä–æ–∂–∞–π!" ‚Üí 50% —à–∞–Ω—Å —Ö–æ—Ä–æ—à–µ–≥–æ —É—Ä–æ–∂–∞—è –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ö–æ–¥—É`,
		`"üíí –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ —Ö—Ä–∞–º–∞–º!" ‚Üí +3 —Å—á–∞—Å—Ç—å—è, -20 –∑–æ–ª–æ—Ç–∞`,
		`"üë®‚Äçüåæ –ù–∞–∑–Ω–∞—á–∏—Ç—å —Å—Ç–∞—Ä–æ—Å—Ç—É!" ‚Üí +2 –∫ —Ä–æ—Å—Ç—É –∂–∏—Ç–µ–ª–µ–π, –Ω–æ -2 –¥–æ—Ö–æ–¥–∞`,
		`"‚öñÔ∏è –°—É–¥–∏—Ç—å –∫–∞–∑–Ω–æ–∫—Ä–∞–¥–∞!" ‚Üí +15 –∑–æ–ª–æ—Ç–∞, –Ω–æ -1 —Å—á–∞—Å—Ç—å–µ`,
		`"üëë –î–∞—Ç—å –¥–≤–æ—Ä—è–Ω—Å—Ç–≤—É –±–æ–ª—å—à–µ –ø—Ä–∞–≤!" ‚Üí +5 –∑–æ–ª–æ—Ç–∞ –∑–∞ —Ö–æ–¥, –Ω–æ -3 —Å—á–∞—Å—Ç—å–µ`,
		`"üèõÔ∏è –†–∞–∑—Ä–µ—à–∏—Ç—å —Å–∞–º–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ!" ‚Üí +3 —Å—á–∞—Å—Ç—å—è, –Ω–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–∞ –Ω–∞ 10% (3 —Ö–æ–¥–∞)`,
		`"üå≥ –ü–æ—Å–∞–¥–∏—Ç—å –ø–∞—Ä–∫!" ‚Üí +3 —Å—á–∞—Å—Ç—å—è, -20 –∑–æ–ª–æ—Ç–∞`,
		`"üö∞ –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≤–æ–¥–æ–∫–∞–Ω–∞–ª!" ‚Üí –°–Ω–∏–∂–∞–µ—Ç —Ä–∏—Å–∫ —ç–ø–∏–¥–µ–º–∏–π –Ω–∞ 10%, –Ω–æ -30 –∑–æ–ª–æ—Ç–∞`,
		`"üå≤ –†–∞–∑—Ä–µ—à–∏—Ç—å –≤—ã—Ä—É–±–∫—É –ª–µ—Å–æ–≤!" ‚Üí +10 –∑–æ–ª–æ—Ç–∞, –Ω–æ +5% —à–∞–Ω—Å –Ω–∞–≤–æ–¥–Ω–µ–Ω–∏—è`,
		`"ü¶å –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å –æ—Ö–æ—Ç—É!" ‚Üí +1 —Å—á–∞—Å—Ç—å–µ, –Ω–æ -5 –∂–∏—Ç–µ–ª–µ–π`,
	}

	selectedOptions := make([]string, 0, 3) // —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ä–µ–∑–∞ –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –æ–ø—Ü–∏–π
	usedIndices := make(map[int]bool)       // —Å–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –∏–Ω–¥–µ–∫—Å–æ–≤
	for len(selectedOptions) < 3 {
		index := rand.Intn(len(options)) // —Å–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –æ–ø—Ü–∏–∏
		if !usedIndices[index] {
			selectedOptions = append(selectedOptions, options[index]) // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ–ø—Ü–∏–∏ –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ
			usedIndices[index] = true                                 // –æ—Ç–º–µ—Ç–∫–∞ –∏–Ω–¥–µ–∫—Å–∞ –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω–æ–≥–æ
		}
	}

	for i, option := range selectedOptions {
		fmt.Printf("%d. %s\n", i+1, option)
	}

	fmt.Print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ä–µ—à–µ–Ω–∏—è (1-3): ")
	var choice int
	fmt.Scan(&choice) // —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

	if choice < 1 || choice > 3 {
		fmt.Println("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. ‚ùå")
		return
	}

	decision := selectedOptions[choice-1]
	if !canAffordDecision(c, decision) {
		fmt.Println("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∑–æ–ª–æ—Ç–∞ –¥–ª—è –ø—Ä–∏–Ω—è—Ç–∏—è —ç—Ç–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è. ‚ùå")
		return
	}

	applyDecision(c, decision) // –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è

	// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è
	c.UpdateIncome()
	c.UpdateLevel()
	c.CheckCityLevel()
	c.UpdateArmy()
	c.UpdatePopulationGrowth()
	c.UpdateDefenseChance() // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —à–∞–Ω—Å–∞ –Ω–∞–ø–∞–¥–µ–Ω–∏—è –≤–∞—Ä–≤–∞—Ä–æ–≤
	c.UpdateEpidemicRisk()  // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞ —ç–ø–∏–¥–µ–º–∏–π
	c.UpdateFloodRisk()     // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞ –Ω–∞–≤–æ–¥–Ω–µ–Ω–∏—è

	fmt.Println("–†–µ—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ:", decision)
}

func canAffordDecision(c *city.City, decision string) bool {
	switch decision {
	case `"üîß –û—Å–≤–æ–±–æ–¥–∏—Ç—å —Ä–µ–º–µ—Å–ª–µ–Ω–Ω–∏–∫–æ–≤ –æ—Ç –Ω–∞–ª–æ–≥–æ–≤!" ‚Üí +3 –¥–æ—Ö–æ–¥ –∑–∞ —Ö–æ–¥, –Ω–æ -10 –∑–æ–ª–æ—Ç–∞ —Å—Ä–∞–∑—É`:
		return c.Treasury >= 10
	case `"üè¨ –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –Ω–æ–≤—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ä—è–¥—ã!" ‚Üí +5 –¥–æ—Ö–æ–¥–∞, -20 –∑–æ–ª–æ—Ç–∞`:
		return c.Treasury >= 20
	case `"üåæ –ü—Ä–∞–∑–¥–Ω–∏–∫ —É—Ä–æ–∂–∞—è!" ‚Üí +10 –∂–∏—Ç–µ–ª–µ–π, -10 –∑–æ–ª–æ—Ç–∞`:
		return c.Treasury >= 10
	case `"üç≤ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —Ä–∞–∑–¥–∞—á–∞ –µ–¥—ã!" ‚Üí +5 –∂–∏—Ç–µ–ª–µ–π, +1 —Å—á–∞—Å—Ç—å–µ, -15 –∑–æ–ª–æ—Ç–∞`:
		return c.Treasury >= 15
	case `"üõ°Ô∏è –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —É–∫—Ä–µ–ø–ª–µ–Ω–∏–π!" ‚Üí -10% –∫ —à–∞–Ω—Å—É –Ω–∞–ø–∞–¥–µ–Ω–∏—è –≤–∞—Ä–≤–∞—Ä–æ–≤, -30 –∑–æ–ª–æ—Ç–∞`:
		return c.Treasury >= 30
	case `"üèãÔ∏è –ü—Ä–æ–≤–µ—Å—Ç–∏ –≤–æ–µ–Ω–Ω—ã–µ —É—á–µ–Ω–∏—è!" ‚Üí +2 –∫ –∞—Ä–º–∏–∏, –Ω–æ -10 –∑–æ–ª–æ—Ç–∞`:
		return c.Treasury >= 10
	case `"üó°Ô∏è –ö—É–ø–∏—Ç—å –æ—Ä—É–∂–∏–µ —É —Ç–æ—Ä–≥–æ–≤—Ü–µ–≤!" ‚Üí –ê—Ä–º–∏—è —Å–∏–ª—å–Ω–µ–µ (–Ω–∞ 10%), –Ω–æ -25 –∑–æ–ª–æ—Ç–∞`:
		return c.Treasury >= 25
	case `"‚õ™ –ü–æ—Å—Ç—Ä–æ–∏—Ç—å —á–∞—Å–æ–≤–Ω—é!" ‚Üí +1 —Å—á–∞—Å—Ç—å–µ, -15 –∑–æ–ª–æ—Ç–∞`:
		return c.Treasury >= 15
	case `"üíí –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ —Ö—Ä–∞–º–∞–º!" ‚Üí +3 —Å—á–∞—Å—Ç—å—è, -20 –∑–æ–ª–æ—Ç–∞`:
		return c.Treasury >= 20
	case `"üå≥ –ü–æ—Å–∞–¥–∏—Ç—å –ø–∞—Ä–∫!" ‚Üí +3 —Å—á–∞—Å—Ç—å—è, -20 –∑–æ–ª–æ—Ç–∞`:
		return c.Treasury >= 20
	case `"üö∞ –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≤–æ–¥–æ–∫–∞–Ω–∞–ª!" ‚Üí –°–Ω–∏–∂–∞–µ—Ç —Ä–∏—Å–∫ —ç–ø–∏–¥–µ–º–∏–π –Ω–∞ 10%, –Ω–æ -30 –∑–æ–ª–æ—Ç–∞`:
		return c.Treasury >= 30
	default:
		return true
	}
}

func applyDecision(c *city.City, decision string) {
	switch decision {
	case `"üé™ –£—Å—Ç—Ä–æ–∏—Ç—å —è—Ä–º–∞—Ä–∫—É!" ‚Üí +20 –∑–æ–ª–æ—Ç–∞, -1 —Å—á–∞—Å—Ç—å–µ`:
		c.Treasury += 20
		c.Happiness -= 1
	case `"üí∞ –ü–æ–≤—ã—Å–∏—Ç—å –Ω–∞–ª–æ–≥–∏!" ‚Üí +30 –∑–æ–ª–æ—Ç–∞, -2 —Å—á–∞—Å—Ç—å–µ`:
		c.Treasury += 30
		c.Happiness -= 2
	case `"üîß –û—Å–≤–æ–±–æ–¥–∏—Ç—å —Ä–µ–º–µ—Å–ª–µ–Ω–Ω–∏–∫–æ–≤ –æ—Ç –Ω–∞–ª–æ–≥–æ–≤!" ‚Üí +3 –¥–æ—Ö–æ–¥ –∑–∞ —Ö–æ–¥, –Ω–æ -10 –∑–æ–ª–æ—Ç–∞ —Å—Ä–∞–∑—É`:
		c.Treasury -= 10
		c.Income += 3
	case `"üçû –ü—Ä–æ–¥–∞–≤–∞—Ç—å –ª–∏—à–Ω—é—é –ø—Ä–æ–≤–∏–∑–∏—é!" ‚Üí +15 –∑–æ–ª–æ—Ç–∞, -5 –∂–∏—Ç–µ–ª–µ–π`:
		c.Treasury += 15
		c.Residents -= 5
	case `"üè¨ –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –Ω–æ–≤—ã–µ —Ç–æ—Ä–≥–æ–≤—ã–µ —Ä—è–¥—ã!" ‚Üí +5 –¥–æ—Ö–æ–¥–∞, -20 –∑–æ–ª–æ—Ç–∞`:
		c.Treasury -= 20
		c.Income += 5
	case `"üåæ –ü—Ä–∞–∑–¥–Ω–∏–∫ —É—Ä–æ–∂–∞—è!" ‚Üí +10 –∂–∏—Ç–µ–ª–µ–π, -10 –∑–æ–ª–æ—Ç–∞`:
		c.Treasury -= 10
		c.Residents += 10
	case `"üçª –°—É–±—Å–∏–¥–∏—Ä–æ–≤–∞—Ç—å —Ç—Ä–∞–∫—Ç–∏—Ä—ã!" ‚Üí +3 —Å—á–∞—Å—Ç—å—è, -5 –¥–æ—Ö–æ–¥–∞`:
		c.Happiness += 3
		c.Income -= 5
	case `"üç≤ –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è —Ä–∞–∑–¥–∞—á–∞ –µ–¥—ã!" ‚Üí +5 –∂–∏—Ç–µ–ª–µ–π, +1 —Å—á–∞—Å—Ç—å–µ, -15 –∑–æ–ª–æ—Ç–∞`:
		c.Treasury -= 15
		c.Residents += 5
		c.Happiness += 1
	case `"üèñÔ∏è –£—Å—Ç—Ä–æ–∏—Ç—å –¥–µ–Ω—å –æ—Ç–¥—ã—Ö–∞!" ‚Üí +2 —Å—á–∞—Å—Ç—å—è, –Ω–æ –¥–æ—Ö–æ–¥ –∑–∞ —Ö–æ–¥ –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–Ω–∏–∂–µ–Ω –Ω–∞ 20% (3 —Ö–æ–¥–∞)`:
		c.Happiness += 2
		c.TemporaryIncomeReduction = 3 // –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–∞ –Ω–∞ 20% –Ω–∞ 3 —Ö–æ–¥–∞
	case `"üïí –°–æ–∫—Ä–∞—Ç–∏—Ç—å —Ä–∞–±–æ—á–∏–π –¥–µ–Ω—å!" ‚Üí +2 —Å—á–∞—Å—Ç—å—è, –Ω–æ -2 –¥–æ—Ö–æ–¥–∞`:
		c.Happiness += 2
		c.Income -= 2
	case `"‚öîÔ∏è –í–æ–µ–Ω–Ω—ã–π –ø—Ä–∏–∑—ã–≤!" ‚Üí +3 –≤–æ–∏–Ω–∞, -5 –∂–∏—Ç–µ–ª–µ–π`:
		c.Army += 3
		c.Residents -= 5
	case `"üõ°Ô∏è –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ —É–∫—Ä–µ–ø–ª–µ–Ω–∏–π!" ‚Üí -10% –∫ —à–∞–Ω—Å—É –Ω–∞–ø–∞–¥–µ–Ω–∏—è –≤–∞—Ä–≤–∞—Ä–æ–≤, -30 –∑–æ–ª–æ—Ç–∞`:
		c.Treasury -= 30
		c.DefenseChance *= 0.9 // —É–º–µ–Ω—å—à–µ–Ω–∏–µ —à–∞–Ω—Å–∞ –Ω–∞–ø–∞–¥–µ–Ω–∏—è –≤–∞—Ä–≤–∞—Ä–æ–≤ –Ω–∞ 10%
	case `"üèãÔ∏è –ü—Ä–æ–≤–µ—Å—Ç–∏ –≤–æ–µ–Ω–Ω—ã–µ —É—á–µ–Ω–∏—è!" ‚Üí +2 –∫ –∞—Ä–º–∏–∏, –Ω–æ -10 –∑–æ–ª–æ—Ç–∞`:
		c.Treasury -= 10
		c.Army += 2
	case `"üî™ –°–æ–∑–¥–∞—Ç—å –æ–ø–æ–ª—á–µ–Ω–∏–µ!" ‚Üí +2 –∫ –∞—Ä–º–∏–∏, –Ω–æ -2 —Å—á–∞—Å—Ç—å–µ`:
		c.Army += 2
		c.Happiness -= 2
	case `"üó°Ô∏è –ö—É–ø–∏—Ç—å –æ—Ä—É–∂–∏–µ —É —Ç–æ—Ä–≥–æ–≤—Ü–µ–≤!" ‚Üí –ê—Ä–º–∏—è —Å–∏–ª—å–Ω–µ–µ (–Ω–∞ 10%), –Ω–æ -25 –∑–æ–ª–æ—Ç–∞`:
		c.Treasury -= 25
		c.ArmyStrengthBonus = 1.1 // —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Å–∏–ª—ã –∞—Ä–º–∏–∏ –Ω–∞ 10%
	case `"‚õ™ –ü–æ—Å—Ç—Ä–æ–∏—Ç—å —á–∞—Å–æ–≤–Ω—é!" ‚Üí +1 —Å—á–∞—Å—Ç—å–µ, -15 –∑–æ–ª–æ—Ç–∞`:
		c.Treasury -= 15
		c.Happiness += 1
	case `"üö´ –ó–∞–ø—Ä–µ—Ç–∏—Ç—å —è–∑—ã—á–µ—Å–∫–∏–µ —Ä–∏—Ç—É–∞–ª—ã!" ‚Üí +5 –∑–æ–ª–æ—Ç–∞, -3 —Å—á–∞—Å—Ç—å–µ`:
		c.Treasury += 5
		c.Happiness -= 3
	case `"üôè –£—Å—Ç—Ä–æ–∏—Ç—å –º–æ–ª–µ–±–µ–Ω –∑–∞ —É—Ä–æ–∂–∞–π!" ‚Üí 50% —à–∞–Ω—Å —Ö–æ—Ä–æ—à–µ–≥–æ —É—Ä–æ–∂–∞—è –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ö–æ–¥—É`:
		if rand.Float64() < 0.5 {
			fmt.Println("–ú–æ–ª–µ–±–µ–Ω –±—ã–ª —É—Å–ø–µ—à–µ–Ω! –û–∂–∏–¥–∞–µ—Ç—Å—è —Ö–æ—Ä–æ—à–∏–π —É—Ä–æ–∂–∞–π –≤ —Å–ª–µ–¥—É—é—â–µ–º —Ö–æ–¥—É.")
			c.HarvestBonus = true // –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –±–æ–Ω—É—Å–∞ —É—Ä–æ–∂–∞—è
		} else {
			fmt.Println("–ú–æ–ª–µ–±–µ–Ω –Ω–µ –ø—Ä–∏–Ω–µ—Å –æ–∂–∏–¥–∞–µ–º—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.")
		}
	case `"üíí –ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ —Ö—Ä–∞–º–∞–º!" ‚Üí +3 —Å—á–∞—Å—Ç—å—è, -20 –∑–æ–ª–æ—Ç–∞`:
		c.Treasury -= 20
		c.Happiness += 3
	case `"üë®‚Äçüåæ –ù–∞–∑–Ω–∞—á–∏—Ç—å —Å—Ç–∞—Ä–æ—Å—Ç—É!" ‚Üí +2 –∫ —Ä–æ—Å—Ç—É –∂–∏—Ç–µ–ª–µ–π, –Ω–æ -2 –¥–æ—Ö–æ–¥–∞`:
		c.PopulationGrowth += 2
		c.Income -= 2
		c.UpdatePopulationGrowth() // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ—Å—Ç–∞ –Ω–∞—Å–µ–ª–µ–Ω–∏—è
	case `"‚öñÔ∏è –°—É–¥–∏—Ç—å –∫–∞–∑–Ω–æ–∫—Ä–∞–¥–∞!" ‚Üí +15 –∑–æ–ª–æ—Ç–∞, –Ω–æ -1 —Å—á–∞—Å—Ç—å–µ`:
		c.Treasury += 15
		c.Happiness -= 1
	case `"üëë –î–∞—Ç—å –¥–≤–æ—Ä—è–Ω—Å—Ç–≤—É –±–æ–ª—å—à–µ –ø—Ä–∞–≤!" ‚Üí +5 –∑–æ–ª–æ—Ç–∞ –∑–∞ —Ö–æ–¥, –Ω–æ -3 —Å—á–∞—Å—Ç—å–µ`:
		c.Income += 5
		c.Happiness -= 3
	case `"üèõÔ∏è –†–∞–∑—Ä–µ—à–∏—Ç—å —Å–∞–º–æ—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ!" ‚Üí +3 —Å—á–∞—Å—Ç—å—è, –Ω–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–∞ –Ω–∞ 10% (3 —Ö–æ–¥–∞)`:
		c.Happiness += 3
		c.TemporaryIncomeReduction = 3 // –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–Ω–∏–∂–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–∞ –Ω–∞ 10% –Ω–∞ 3 —Ö–æ–¥–∞
	case `"üå≥ –ü–æ—Å–∞–¥–∏—Ç—å –ø–∞—Ä–∫!" ‚Üí +3 —Å—á–∞—Å—Ç—å—è, -20 –∑–æ–ª–æ—Ç–∞`:
		c.Treasury -= 20
		c.Happiness += 3
	case `"üö∞ –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –≤–æ–¥–æ–∫–∞–Ω–∞–ª!" ‚Üí –°–Ω–∏–∂–∞–µ—Ç —Ä–∏—Å–∫ —ç–ø–∏–¥–µ–º–∏–π –Ω–∞ 10%, –Ω–æ -30 –∑–æ–ª–æ—Ç–∞`:
		c.Treasury -= 30
		c.EpidemicRiskReduction = 0.9 // —É–º–µ–Ω—å—à–µ–Ω–∏–µ —Ä–∏—Å–∫–∞ —ç–ø–∏–¥–µ–º–∏–π –Ω–∞ 10%
	case `"üå≤ –†–∞–∑—Ä–µ—à–∏—Ç—å –≤—ã—Ä—É–±–∫—É –ª–µ—Å–æ–≤!" ‚Üí +10 –∑–æ–ª–æ—Ç–∞, –Ω–æ +5% —à–∞–Ω—Å –Ω–∞–≤–æ–¥–Ω–µ–Ω–∏—è`:
		c.Treasury += 10
		c.FloodRiskIncrease = 1.05 // —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ä–∏—Å–∫–∞ –Ω–∞–≤–æ–¥–Ω–µ–Ω–∏—è –Ω–∞ 5%
	case `"ü¶å –û–≥—Ä–∞–Ω–∏—á–∏—Ç—å –æ—Ö–æ—Ç—É!" ‚Üí +1 —Å—á–∞—Å—Ç—å–µ, –Ω–æ -5 –∂–∏—Ç–µ–ª–µ–π`:
		c.Happiness += 1
		c.Residents -= 5
	}

	// –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π
	fmt.Printf("–ö–∞–∑–Ω–∞: %d –∑–æ–ª–æ—Ç–∞\n", c.Treasury)
	fmt.Printf("–°—á–∞—Å—Ç—å–µ: %d/10\n", c.Happiness)
	fmt.Printf("–î–æ—Ö–æ–¥: %.2f/—Ö–æ–¥\n", c.Income)
	fmt.Printf("–ê—Ä–º–∏—è: %d –≤–æ–∏–Ω–æ–≤\n", c.Army)
	fmt.Printf("–ñ–∏—Ç–µ–ª–∏: %d\n", int(c.Residents))

	// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π –ø–æ—Å–ª–µ –ø—Ä–∏–Ω—è—Ç–∏—è —Ä–µ—à–µ–Ω–∏—è
	c.UpdateIncome()
	c.UpdateLevel()
	c.CheckCityLevel()
	c.UpdateArmy()
	c.UpdatePopulationGrowth() // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–æ—Å—Ç–∞ –Ω–∞—Å–µ–ª–µ–Ω–∏—è
	c.UpdateDefenseChance()    // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —à–∞–Ω—Å–∞ –Ω–∞–ø–∞–¥–µ–Ω–∏—è –≤–∞—Ä–≤–∞—Ä–æ–≤
	c.UpdateEpidemicRisk()     // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞ —ç–ø–∏–¥–µ–º–∏–π
	c.UpdateFloodRisk()        // –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∏—Å–∫–∞ –Ω–∞–≤–æ–¥–Ω–µ–Ω–∏—è

	fmt.Println("–†–µ—à–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ:", decision)
}
