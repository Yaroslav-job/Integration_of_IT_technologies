package villages

import (
	"fmt"       // –∏–º–ø–æ—Ä—Ç –ø–∞–∫–µ—Ç–∞ –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≤–≤–æ–¥–∞/–≤—ã–≤–æ–¥–∞
	"math/rand" // –∏–º–ø–æ—Ä—Ç –ø–∞–∫–µ—Ç–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Å–ª—É—á–∞–π–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏

	"example.com/City/city" // –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è city
)

var villageList = []*city.Village{
	{
		Name:         "–ö—Ä–µ—Å—Ç—å—è–Ω—Å–∫–∞—è –¥–µ—Ä–µ–≤–Ω—è", // –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–µ—Ä–µ–≤–Ω–∏
		RequiredArmy: 5,                      // –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∏–Ω–æ–≤ –¥–ª—è –∑–∞—Ö–≤–∞—Ç–∞
		Bonus:        "+5 –∂–∏—Ç–µ–ª–µ–π –∑–∞ —Ö–æ–¥",    // –±–æ–Ω—É—Å –∑–∞ –∑–∞—Ö–≤–∞—Ç
		BonusEffect: func(c *city.City) { // —ç—Ñ—Ñ–µ–∫—Ç –±–æ–Ω—É—Å–∞
			c.Residents += 5 // —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∂–∏—Ç–µ–ª–µ–π –Ω–∞ 5
		},
		PlunderEffect: func(c *city.City) { // —ç—Ñ—Ñ–µ–∫—Ç —Ä–∞–∑–≥—Ä–∞–±–ª–µ–Ω–∏—è
			c.Treasury += 50 // —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–∞–∑–Ω—ã –Ω–∞ 50 –∑–æ–ª–æ—Ç–∞
		},
		Contested: false, // —Ñ–ª–∞–≥, —É–∫–∞–∑—ã–≤–∞—é—â–∏–π, —á—Ç–æ –¥–µ—Ä–µ–≤–Ω—è –Ω–µ –∑–∞—Ö–≤–∞—á–µ–Ω–∞
	},
	{
		Name:         "–ì–æ—Ä–Ω–∞—è –¥–µ—Ä–µ–≤–Ω—è",
		RequiredArmy: 10,
		Bonus:        "+5 –∑–æ–ª–æ—Ç–∞ –∑–∞ —Ö–æ–¥",
		BonusEffect: func(c *city.City) {
			c.Treasury += 5
		},
		PlunderEffect: func(c *city.City) {
			c.Treasury += 50
		},
		Contested: false,
	},
	{
		Name:         "–†—ã–±–∞—Ü–∫–∞—è –¥–µ—Ä–µ–≤–Ω—è",
		RequiredArmy: 8,
		Bonus:        "+3 —Å—á–∞—Å—Ç—å—è",
		BonusEffect: func(c *city.City) {
			c.Happiness += 3
			if c.Happiness > 10 {
				c.Happiness = 10
			}
		},
		PlunderEffect: func(c *city.City) {
			c.Treasury += 50
		},
		Contested: false,
	},
	{
		Name:         "–§–æ—Ä—Ç —Ä–∞–∑–±–æ–π–Ω–∏–∫–æ–≤",
		RequiredArmy: 15,
		Bonus:        "+7 –∫ –∞—Ä–º–∏–∏, -2 —Å—á–∞—Å—Ç—å—è",
		BonusEffect: func(c *city.City) {
			c.Army += 7
			c.Happiness -= 2
		},
		PlunderEffect: func(c *city.City) {
			c.Treasury += 50
		},
		Contested: false,
	},
	{
		Name:         "–°–≤—è—â–µ–Ω–Ω–∞—è –¥–µ—Ä–µ–≤–Ω—è",
		RequiredArmy: 12,
		Bonus:        "+2 —Å—á–∞—Å—Ç—å—è, -10% —à–∞–Ω—Å —ç–ø–∏–¥–µ–º–∏–∏",
		BonusEffect: func(c *city.City) {
			c.Happiness += 2
			if c.Happiness > 10 {
				c.Happiness = 10
			}
			c.EpidemicRiskReduction *= 0.9
		},
		PlunderEffect: func(c *city.City) {
			c.Treasury += 50
		},
		Contested: false,
	},
	{
		Name:         "–¢–æ—Ä–≥–æ–≤—ã–π –ø–æ—Å—Ç",
		RequiredArmy: 20,
		Bonus:        "+15 –∑–æ–ª–æ—Ç–∞ –∑–∞ —Ö–æ–¥",
		BonusEffect: func(c *city.City) {
			c.Treasury += 15
		},
		PlunderEffect: func(c *city.City) {
			c.Treasury += 50
		},
		Contested: false,
	},
	{
		Name:         "–í–æ–µ–Ω–Ω—ã–π –ª–∞–≥–µ—Ä—å",
		RequiredArmy: 25,
		Bonus:        "+10 –∫ –∞—Ä–º–∏–∏, -5 –∑–æ–ª–æ—Ç–∞",
		BonusEffect: func(c *city.City) {
			c.Army += 10
			c.Treasury -= 5
		},
		PlunderEffect: func(c *city.City) {
			c.Treasury += 50
		},
		Contested: false,
	},
	{
		Name:         "–ó–∞–±—Ä–æ—à–µ–Ω–Ω–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å",
		RequiredArmy: 18,
		Bonus:        "+5 –∫ –∞—Ä–º–∏–∏, +3 —Å—á–∞—Å—Ç—å—è",
		BonusEffect: func(c *city.City) {
			c.Army += 5
			c.Happiness += 3
			if c.Happiness > 10 {
				c.Happiness = 10
			}
		},
		PlunderEffect: func(c *city.City) {
			c.Treasury += 50
		},
		Contested: false,
	},
	{
		Name:         "–î–µ—Ä–µ–≤–Ω—è –æ—Ö–æ—Ç–Ω–∏–∫–æ–≤",
		RequiredArmy: 10,
		Bonus:        "+3 –∑–æ–ª–æ—Ç–∞, +2 –∂–∏—Ç–µ–ª–µ–π –∑–∞ —Ö–æ–¥",
		BonusEffect: func(c *city.City) {
			c.Treasury += 3
			c.Residents += 2
		},
		PlunderEffect: func(c *city.City) {
			c.Treasury += 50
		},
		Contested: false,
	},
	{
		Name:         "–†–∞–±–æ—Ç–æ—Ä–≥–æ–≤—Ü—ã",
		RequiredArmy: 22,
		Bonus:        "+20 –∂–∏—Ç–µ–ª–µ–π, -5 —Å—á–∞—Å—Ç—å—è",
		BonusEffect: func(c *city.City) {
			c.Residents += 20
			c.Happiness -= 5
		},
		PlunderEffect: func(c *city.City) {
			c.Treasury += 50
		},
		Contested: false,
	},
}

func AttackVillageMenu(c *city.City) {
	fmt.Println("========================================")
	fmt.Println("–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ—Ä–µ–≤–Ω—é –¥–ª—è –∞—Ç–∞–∫–∏:")
	for i, village := range villageList {
		if !village.Contested {
			fmt.Printf("%d. %s (%d+ –≤–æ–∏–Ω–æ–≤) ‚Üí %s\n", i+1, village.Name, village.RequiredArmy, village.Bonus)
		}
	}
	fmt.Println("11. –û—Ç–º–µ–Ω–∞")
	fmt.Print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ü–µ–ª–∏: ")
	var choice int
	fmt.Scan(&choice) // —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	if choice < 1 || choice > len(villageList) {
		fmt.Println("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. ‚ùå")
		return
	}
	village := villageList[choice-1]
	if c.Army < village.RequiredArmy {
		fmt.Println("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤–æ–∏–Ω–æ–≤ –¥–ª—è –∞—Ç–∞–∫–∏.")
		return
	}
	attackVillage(c, village) // –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∞—Ç–∞–∫–∏ –¥–µ—Ä–µ–≤–Ω–∏
}

func attackVillage(c *city.City, village *city.Village) {
	fmt.Printf("–í—ã –∞—Ç–∞–∫—É–µ—Ç–µ %s...\n", village.Name)
	var successChance int
	if c.Army >= village.RequiredArmy*2 {
		successChance = 80 // —à–∞–Ω—Å —É—Å–ø–µ—Ö–∞ 80%, –µ—Å–ª–∏ –∞—Ä–º–∏—è –≤ –¥–≤–∞ —Ä–∞–∑–∞ –±–æ–ª—å—à–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π
	} else if c.Army >= village.RequiredArmy {
		successChance = 50 // —à–∞–Ω—Å —É—Å–ø–µ—Ö–∞ 50%, –µ—Å–ª–∏ –∞—Ä–º–∏—è —Ä–∞–≤–Ω–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π
	} else {
		successChance = 20 // —à–∞–Ω—Å —É—Å–ø–µ—Ö–∞ 20%, –µ—Å–ª–∏ –∞—Ä–º–∏—è –º–µ–Ω—å—à–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π
	}
	if rand.Intn(100) < successChance {
		fmt.Println("üéâ –ü–æ–±–µ–¥–∞! –î–µ—Ä–µ–≤–Ω—è —Ç–µ–ø–µ—Ä—å –≤–∞—à–∞!")
		fmt.Println("–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –¥–µ–ª–∞—Ç—å —Å –¥–µ—Ä–µ–≤–Ω–µ–π:")
		fmt.Println("1. –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å (–ø–æ–ª—É—á–∞—Ç—å", village.Bonus, ")")
		fmt.Println("2. –†–∞–∑–≥—Ä–∞–±–∏—Ç—å (+50 –∑–æ–ª–æ—Ç–∞, –¥–µ—Ä–µ–≤–Ω—è —Å–≥–æ—Ä–∏—Ç)")
		fmt.Print("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—è: ")
		var action int
		fmt.Scan(&action) // —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		if action == 1 {
			c.Villages[village.Name] = village // –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –¥–µ—Ä–µ–≤–Ω–∏
			village.Contested = true           // —É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ñ–ª–∞–≥–∞ –∑–∞—Ö–≤–∞—Ç–∞
		} else if action == 2 {
			village.PlunderEffect(c) // —ç—Ñ—Ñ–µ–∫—Ç —Ä–∞–∑–≥—Ä–∞–±–ª–µ–Ω–∏—è
		} else {
			fmt.Println("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞. ‚ùå")
		}
		// –£–º–µ–Ω—å—à–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–∏–Ω–æ–≤ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –±–∏—Ç–≤—ã
		c.Army -= village.RequiredArmy
		if c.Army < 0 {
			c.Army = 0
		}
	} else {
		fmt.Println("‚ùå –ê—Ç–∞–∫–∞ –ø—Ä–æ–≤–∞–ª–∏–ª–∞—Å—å. –í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ 30% –∞—Ä–º–∏–∏.")
		c.Army = int(float64(c.Army) * 0.7) // —É–º–µ–Ω—å—à–µ–Ω–∏–µ –∞—Ä–º–∏–∏ –Ω–∞ 30%
		if c.Army < 0 {
			c.Army = 0
		}
	}
}
