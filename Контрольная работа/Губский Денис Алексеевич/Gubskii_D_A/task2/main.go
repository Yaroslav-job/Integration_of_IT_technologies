// main.go
// Основная программа для запуска генератора и вычислителя квадратных корней
//
// Разработчик: Губский Денис Алексеевич
// Лицензия: GPLv3
// История изменений:
//  - v 0.1: Создание проекта, реализация задачи с использованием горутин и каналов
//  - v 0.2: Добавление тестов и файлов Makefile и LICENSE.md

package main

import (
	"sync"                 // Импортируем пакет для работы с синхронизацией
	"task2/generator"      // Импортируем пакет для генерации случайных чисел
	"task2/sqrtcalculator" // Импортируем пакет для вычисления квадратных корней
)

func main() {
	// Создаем канал для передачи чисел
	numCh := make(chan int)

	// Создаем WaitGroup для ожидания завершения горутин
	var wg sync.WaitGroup

	// Запускаем горутину для генерации случайных чисел
	wg.Add(1) // Увеличиваем счетчик WaitGroup
	go func() {
		defer wg.Done()                            // Уменьшаем счетчик WaitGroup после завершения горутины
		generator.GenerateRandomNumbers(numCh, 20) // Генерируем 20 случайных чисел
	}()

	// Запускаем горутину для вычисления квадратных корней
	wg.Add(1) // Увеличиваем счетчик WaitGroup
	go func() {
		defer wg.Done()                            // Уменьшаем счетчик WaitGroup после завершения горутины
		sqrtcalculator.CalculateSquareRoots(numCh) // Вычисляем квадратные корни чисел из канала
	}()

	// Ожидаем завершения обеих горутин
	wg.Wait() // Блокируем выполнение до завершения всех горутин
}
