# Makefile ‚Äî –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–±–æ—Ä–∫–∏ –∏ —Ç–µ—Å—Ç–æ–≤ golang-assignment

# Output –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–±–æ—Ä–∫–∏ –∏ –¥–µ–ø–ª–æ—è
BIN_DIR := bin
DEPLOY_DIR := dist

# Entry points
CMDS := cmd/camelcase cmd/network

.PHONY: all clear build run test deploy

all: clear build test

clear:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±–∏–Ω–∞—Ä–Ω–∏–∫–æ–≤..."
	@rm -rf $(BIN_DIR) $(DEPLOY_DIR)

build:
	@echo "üî® –°–±–æ—Ä–∫–∞ –≤—Å–µ—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π..."
	@mkdir -p $(BIN_DIR)
	@for dir in $(CMDS); do \
		name=$$(basename $$dir); \
		go build -o $(BIN_DIR)/$$name $$dir/main.go || exit 1; \
		echo "‚úîÔ∏è –°–æ–±—Ä–∞–Ω–æ: $$name"; \
	done

run: build
	@echo "üöÄ –ó–∞–ø—É—Å–∫ camelcase:"
	@./$(BIN_DIR)/camelcase
	@echo "üöÄ –ó–∞–ø—É—Å–∫ network:"
	@./$(BIN_DIR)/network

test:
	@echo "üß™ –ó–∞–ø—É—Å–∫ unit-—Ç–µ—Å—Ç–æ–≤..."
	@go test ./... -v

deploy: build
	@echo "üì¶ –î–µ–ø–ª–æ–π –±–∏–Ω–∞—Ä–Ω–∏–∫–æ–≤..."
	@mkdir -p $(DEPLOY_DIR)
	@cp $(BIN_DIR)/* $(DEPLOY_DIR)/
	@echo "‚úÖ –ë–∏–Ω–∞—Ä–Ω–∏–∫–∏ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤ $(DEPLOY_DIR)/"
